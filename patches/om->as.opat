
(:patch
 (:om-version 0.0111)
 (:name "om->as")
 (:doc "")
 (:info
  (:created "2019/08/03 0:40:44")
  (:modified "2019/08/03 0:41:02"))
 (:window (:size (672 493)) (:position (211 207)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 88)
   (:y 18)
   (:w 440)
   (:h 59)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Courier") (:size 18) (:style :bold)))
   (:align nil)
   (:text
    "AS->OM : Converting a partial tracking analysis file into a CHORD-SEQ")
   (:id 0))
  (:comment
   (:x 193)
   (:y 105)
   (:w 462)
   (:h 70)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Courier") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "Partial tracking analysis file (SDIF \"1TRC\", \"1HRM\" or \"1MRK\")
- Imported from AudioSculpt
or
- Generated in OM using the OM-pm2 library")
   (:id 1))
  (:comment
   (:x 412)
   (:y 310)
   (:w 153)
   (:h 28)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Courier") (:size 12) (:style :plain)))
   (:align nil)
   (:text "(original sound...)")
   (:id 2))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name "SOUND")
   (:x 417)
   (:y 245)
   (:w 155)
   (:h 67)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "SOUND")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples 230656)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname
        (:pathname
         (:directory
          (:absolute
           "Users"
           "bresson"
           "_SHARED-FILES"
           "WORKSPACES"
           "my-workspace"
           "in-files"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "africa")
         (:type "aiff")))
       (:sample-rate 44100)
       (:n-channels 1)
       (:n-samples 230656)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 3))
  (:box
   (:reference sdiffile)
   (:type :object)
   (:group-id nil)
   (:name "SDIFFILE")
   (:x 95)
   (:y 101)
   (:w 86)
   (:h 69)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "SDIFFILE")
   (:display :hidden)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:slots nil)
     (:add-slots
      ((:file-pathname
        (:pathname
         (:directory
          (:absolute
           "Users"
           "bresson"
           "_SHARED-FILES"
           "WORKSPACES"
           "my-workspace"
           "in-files"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "africa.mrk")
         (:type "sdif")))
       (:file-map nil)))))
   (:id 4))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux1")
   (:x 213)
   (:y 209)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 5))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 182)
   (:y 177)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8)
   (:id 6))
  (:box
   (:library "Repmus")
   (:reference as->om)
   (:type :function)
   (:group-id nil)
   (:name "as->om")
   (:x 128)
   (:y 241)
   (:w 90)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ANALYSE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VMIN")
     (:value 40)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VMAX")
     (:value 100)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DELTA")
     (:value 50)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MMIN")
     (:value 4000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MMAX")
     (:value 8600)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "APPROX")
     (:value 8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NPOLY")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 37)
   (:y 328)
   (:w 294)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 5030)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6550 7198 5970)
         (:list 5958 7188 6762 7526)
         (:list 6766 7530 6332 5982 7176)
         (:list 7190 5970 6794)
         (:list 6540 5966 7188 5958)
         (:list 7190 5952 6322 7534)
         (:list 5944 7186 7530 6312)
         (:list 5946 7184 6584)
         (:list 6542 5978 7188)
         (:list 6782 5950 7188 6600 7524 6336)
         (:list 6780 6320 7530)
         (:list 6544 6162 7380)
         (:list 7186 5960 6308 7530)
         (:list 5954 7188 6318 7530 6312)
         (:list 5948)
         (:list 6542 5980 7188)
         (:list 6788 5950 7190 6320 7536)
         (:list 6544 6162 7380 6738)
         (:list 7186 5960 6308 7530)
         (:list 5954 7190 6318 7532)
         (:list 5954 7188 7530 6312)
         (:list 6542 5980 7188 5948)
         (:list 6796 5976 7190 6628 7536)
         (:list 6784 5938 7188 6340 7534)
         (:list 6770 7530 5972 6336 6190 7384)
         (:list 6542 6162 7380)
         (:list 7196 5974 7534)
         (:list 5954 7188 6310 7530)
         (:list 6544 7190 5984)
         (:list 6774 5948 7176 6516 6310 7528)
         (:list 6784 7536 6334 7978 5968)
         (:list 6782 6314 7530)
         (:list 6542 6164 7380)
         (:list 7200 5962 7534)
         (:list 5952 7188 6312 7530)
         (:list 5972)
         (:list 6548 7192 5974)
         (:list 6542 7192 5972)
         (:list 6788 5946 7186 6412 7526)
         (:list 6778 6328 7532 5986)
         (:list 7190 5976)
         (:list 6552 7192 5972)
         (:list 6536 5960)
         (:list 5964 7196 6566 6308 7538)
         (:list 5946 7188 6320 7532)
         (:list 5960)
         (:list 6544 7192 5978)
         (:list 6764 5956 7194 7530 6304 6322)))
       (:lonset
        (:list
         0
         80
         200
         280
         430
         540
         670
         740
         810
         950
         1070
         1230
         1360
         1450
         1580
         1630
         1760
         1870
         2030
         2110
         2160
         2250
         2430
         2480
         2530
         2700
         2830
         2920
         3090
         3220
         3270
         3340
         3520
         3630
         3700
         3840
         3900
         3950
         4030
         4100
         4180
         4300
         4370
         4420
         4500
         4640
         4710
         4850
         5030))
       (:ldur
        (:list
         (:list 100 100 100)
         (:list 120 120 120 120)
         (:list 80 80 80 80 80)
         (:list 150 150 150)
         (:list 150 40 40 150)
         (:list 130 130 130 130)
         (:list 70 70 70 70)
         (:list 100 30 100)
         (:list 140 140 140)
         (:list 140 20 140 20 140 140)
         (:list 160 160 160)
         (:list 130 130 130)
         (:list 90 90 90 90)
         (:list 170 170 40 170 170)
         (:list 50)
         (:list 130 130 130)
         (:list 110 110 110 110 110)
         (:list 190 190 190 30)
         (:list 80 80 80 80)
         (:list 50 50 50 50)
         (:list 90 90 90 90)
         (:list 220 220 220 40)
         (:list 50 50 50 50 50)
         (:list 50 50 50 50 50)
         (:list 200 30 30 30 200 200)
         (:list 130 130 130)
         (:list 90 90 90)
         (:list 170 170 170 170)
         (:list 130 130 130)
         (:list 80 80 80 30 80 80)
         (:list 70 70 70 70 70)
         (:list 80 80 80)
         (:list 110 110 110)
         (:list 70 70 70)
         (:list 140 140 140 140)
         (:list 60)
         (:list 50 50 50)
         (:list 80 80 80)
         (:list 70 70 70 70 70)
         (:list 80 80 80 80)
         (:list 120 120)
         (:list 70 70 70)
         (:list 50 50)
         (:list 100 100 20 100 100)
         (:list 140 140 140 140)
         (:list 70)
         (:list 140 140 140)
         (:list 180 40 40 180 40 180)))
       (:lvel
        (:list
         (:list 80 62 59)
         (:list 64 61 55 40)
         (:list 80 47 46 43 41)
         (:list 63 60 41)
         (:list 92 52 50 41)
         (:list 65 63 55 52)
         (:list 56 51 48 47)
         (:list 50 43 40)
         (:list 77 62 61)
         (:list 87 63 59 54 49 49)
         (:list 44 41 40)
         (:list 81 48 42)
         (:list 63 63 53 45)
         (:list 66 62 48 47 41)
         (:list 42)
         (:list 77 61 59)
         (:list 70 55 50 46 43)
         (:list 81 48 42 41)
         (:list 63 63 53 45)
         (:list 66 62 48 47)
         (:list 56 50 41 41)
         (:list 77 61 59 42)
         (:list 61 59 58 52 41)
         (:list 67 56 55 46 43)
         (:list 63 47 47 46 46 40)
         (:list 82 50 42)
         (:list 72 72 44)
         (:list 55 51 42 41)
         (:list 80 67 61)
         (:list 71 64 63 56 46 44)
         (:list 100 47 47 42 42)
         (:list 59 44 43)
         (:list 75 48 42)
         (:list 66 65 43)
         (:list 59 55 46 45)
         (:list 41)
         (:list 80 69 61)
         (:list 73 66 65)
         (:list 73 59 52 47 41)
         (:list 78 45 44 41)
         (:list 64 63)
         (:list 84 55 55)
         (:list 73 45)
         (:list 63 62 54 51 44)
         (:list 63 57 51 50)
         (:list 43)
         (:list 75 68 65)
         (:list 87 60 54 45 45 44)))
       (:loffset
        (:list
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 8)))
 (:connections
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 7 :in 7))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 7 :in 6))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 8 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))